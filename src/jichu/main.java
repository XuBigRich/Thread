package jichu;

/**
 * Java天生就是多线程的，每个main都是一个线程。
 * 线程分为前台线程与后台线程
 * main属于前台线程。其他线程属于后台线程
 * jre判断 程序是否执行结束 的标准就是 前台线程是否执行完毕。
 * Java的后台线程会在所有前台线程结束后，结束，后台线程主要用于内存分配等方面。。。
 *
 * 前台线程和后台线程的区别和联系：
 * 1、后台线程du不会阻止进程zhi的终止。属于某个进dao程的所有前台线程都终止后，该进程就会被终止。所有剩余的后台线程都会停止且不会完成。
 * 2、可以在任何时候将前台线程修改为后台线程，方式是设置Thread.IsBackground 属性。
 * 3、不管是前台线程还是后台线程，如果线程内出现了异常，都会导致进程的终止。
 * 4、托管线程池中的线程都是后台线程，使用new Thread方式创建的线程默认都是前台线程。
 * 说明：
 * 应用程序的主线程以及使用Thread构造的线程都默认为前台线程
 *
 *
 * 还可以说 用户线程就是前台线程，守护线程就是后台线程
 *
 * 说明：
 * 应用程序的主线程以及使用 Thread 构造的线程都默认为前台线程
 * 使用 Thread 建立的线程默认情况下是前台线程，在进程中，只要有一个前台线程未退出，进程就不会终止。
 * 主线程就是一个前台线程。而后台线程不管线程是否结束，只要所有的前台线程都退出（包括正常退出和异常退出）后，
 * 进程就会自动终止。一般后台线程用于处理时间较短的任务，如在一个 Web 服务器中可以利用后台线程来处理客户端发过来的请求信息。
 * 而前台线程一般用于处理需要长时间等待的任务，
 * 如在 Web 服务器中的监听客户端请求的程序，或是定时对某些系统资源进行扫描的程序
 */
public class main {
    public static void main(String[] args) {
        System.out.println(Thread.currentThread().getName());
    	}
}
